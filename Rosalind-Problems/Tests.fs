namespace Rosalind_Problems

open System
open Xunit
open Xunit.Abstractions
open Helpers

module Tests =

    let toUpper (x:string) = x.ToUpper()

    let explode (x:string) = [| for c in x -> c |]
    
    let countBases data =
        toUpper data
        |> explode
        |> Seq.countBy id
        |> Seq.toList

    let getCount (_,c) = c
        
    type RosalindTests(output : ITestOutputHelper) =
        do new Converter(output) |> Console.SetOut

        [<Fact>]
        member __.``Count occurrences of bases`` () =
            // Arrange.
            let data = "GGCAGCTCATCTGAGTTGTTGTCTCAATGCGTTCAACATGCAGGTCTCGGTTGGTGAGTCCACACGAGACCAAAAGCCAGTGGTAATTAAGAGGATAAGCAATCGAGTGCGTTCAATAGAGTACTTCATTGCTTCCAACCAGTTATGGACGCAAACAGTCAGGTATGTTACGAACTCCATCCCCGACGATGGCCGGTTAGGGGGCCGAATGTAACAGTTCTCAGACAGGGGAACGGAAGGAGGGCGGGGACATTTCTGATGCGGCGACGATTTAAAATATCTAACCAGCCTAGAGGGAGCCGAGAGAATCTTAAATTCATGGTTGGCAGTGGAGACAGGCAGTCCCGCTACGCTGTTGCATCTTGGTCCGCCCGGTCGCGGACAGCAAGAGATTGGCGTCGGTTCGTCGTAGTATAGGGATCTATCCGTTGATCTTTCACTAAAGTTAGATGTAGAGCGGACACCTATAGCTGGAAATAACGTTACTTGGTTTATATTTAATAGGCCATTAAGGTCTTAGGCAAAAATGTACCTAAATAGTGGGCGACCAAGTAGTCTCTGAAGTCTCGATCGGTTTGAGCGGCATATTTCTTAATTACGGTGACCTTATCTGGCGGCGATCGCACGTGAAGGACAGGACGAGAAGTGGGAGTCCTTTAACTATTTTCTACCACCGTTCGGCATTGTCTAGTTACTCCGCAGTGCATCTGTTTTCGGTCATCCTAGAGGGATCTGCCCTGTCGGCTGAGACGGCCCCTCACCTTAAAGCCCTCCTGACAAGCCAACAAACAACACCCACTGTTACAGACCCGTTAACAGTACTTGTCGGCGGGGTCGCAAACGTGAACCACGCTCCTATTGAGAATTGATTATAGCGGCACTA"
            
            // Act.
            let results = countBases data
            
            // Assert
            results |> List.iter(fun x -> printf "%d " (getCount x))
            Assert.Equal(4, results.Length)
